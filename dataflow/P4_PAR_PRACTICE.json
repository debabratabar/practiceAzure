{
	"name": "P4_PAR_PRACTICE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_dp203_CustomerAddress",
						"type": "DatasetReference"
					},
					"name": "CustomerAddressData"
				},
				{
					"dataset": {
						"referenceName": "DS_dp203_Address",
						"type": "DatasetReference"
					},
					"name": "AddressData"
				},
				{
					"dataset": {
						"referenceName": "dp203DB_Cust_dataset",
						"type": "DatasetReference"
					},
					"name": "CustomerTableData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "curatedContainer",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          AddressID as integer,",
				"          AddressType as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerAddressData",
				"source(output(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          StateProvince as string,",
				"          CountryRegion as string,",
				"          PostalCode as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> AddressData",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerTableData",
				"CustomerAddressData, AddressData join(CustomerAddressData@AddressID == AddressData@AddressID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          CustomerID,",
				"          AddressType,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          StateProvince,",
				"          CountryRegion,",
				"          PostalCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, select2 lookup(select1@CustomerID == select2@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"CustomerTableData select(mapColumn(",
				"          CustomerID,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          CompanyName,",
				"          EmailAddress,",
				"          Phone",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"lookup1 select(mapColumn(",
				"          CustomerID = select1@CustomerID,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Phone,",
				"          EmailAddress,",
				"          AddressType,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          StateProvince,",
				"          CountryRegion,",
				"          PostalCode,",
				"          CompanyName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 derive(fileName = concat('CustomerData/', \"{CountryRegion}/{StateProvince}/Cust_Data_\" , toString(currentDate('UTC'),'dd-MM-yyyy') ,\".csv\")) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     rowUrlColumn:'fileName',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          CustomerID,",
				"          Title,",
				"          FirstName,",
				"          MiddleName,",
				"          LastName,",
				"          Phone,",
				"          EmailAddress,",
				"          AddressType,",
				"          AddressLine1,",
				"          AddressLine2,",
				"          City,",
				"          StateProvince,",
				"          CountryRegion,",
				"          PostalCode,",
				"          CompanyName",
				"     )) ~> sink1"
			]
		}
	}
}